from cryptography.fernet import Fernet
key = Fernet.generate_key()
f = Fernet(key)
token = f.encrypt(b"my deep dark secret")
token
b'...'
f.decrypt(token)
b'my deep dark secret'

import os

se crea el modelo y se llama 

def generar_clave():
    clave=fernet.generate_key()
    guarda_clave = F"claveGenerada {clave}"

    file="clave_fernet.py"
    ubicacion = os.path.join("auxiliares",file)
    ubicacion = os.path.abspath(ubicacion)
    ubicacion = os.path.realpath(ubicacion)
    archivo = open(f"(ubicacion)","+w")
    archivo.write(guarda_clave)
    archivo.close()


clave_cryp.generar_clave()

import fernet
 crea y guardar contrase√±a

nuevo archivo negocio/encryptacion.py
    from cryptography.fernet import fernet
    from auxiliares.clave_fernet import claveGenerada

    def encriptar(contrasena):
        clave_encriptacion = fernet(claveGenerada)
        contrasena_ecriptada = clave_encriptacion.encrypt(contrasena.encode("utf=8"))





viernes 13 medio dia 
lunes 23:59 trabajo final

usar fernet comparar string nomas
guarda_clave = F"claveGenerada {clave}"
main menu con crud con 

<encriptar contrasena despues de generar una con fernet>

def desecriptar(contrasena_ecriptada)
    pass


//nomas